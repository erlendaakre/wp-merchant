package com.frostvoid.wpMerchant.services

import akka.actor.{Actor, ActorLogging}
import com.frostvoid.wpMerchant.api._
import com.frostvoid.wpMerchant.util.IdGenerator

/**
  * Handles retrieval and storage of Offers in a mutable map
  */
class OfferWorker extends Actor with ActorLogging with IdGenerator {

  private val offerStore = collection.mutable.Map.empty[Int, Offer] // Int = Offer.id

  override def receive: Receive = {
    case GetOfferRequest(id) => sender() ! offerStore.get(id).fold(EmptyReply: OfferReply)(o => OfferReturned(o))
    case AddOfferRequest(merchantId, itemId, price, currency) => sender() ! addOffer(merchantId, itemId, price, currency)
  }

  override def postStop: Unit = log.info("Shutting down")

  override def preStart: Unit = log.info("Starting up")

  private def addOffer(merchantId: Int, itemId: Int, price: Double, currency: String): OfferReply = {
    val id = generateId
    log.info(s"Adding offer by MERCHANT for ITEM, autogenerated id is '$id'")
    if (offerStore.contains(id)) {
      log.warning(s"Autogenerated ID collision, trying to add offer by MERCHANT for ITEM to item store with id $id")
      EmptyReply
    }
    else {
      val o = Offer(id, merchantId, itemId, price, currency)
      offerStore.put(id, o)
      OfferReturned(o)
    }
  }
}

